name: Build and Push Multiarch Images

on:
  push:
    branches:
      - main

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build amd64 image
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64
          push: true
          tags: julianzanetti/portfolio:amd64
          cache-from: type=registry,ref=julianzanetti/portfolio:cache-amd64
          cache-to: type=registry,ref=julianzanetti/portfolio:cache-amd64,mode=max

  build-arm64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub 
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build arm64 image
        uses: docker/build-push-action@v5
        with:
          platforms: linux/arm64
          push: true
          tags: julianzanetti/portfolio:arm64
          cache-from: type=registry,ref=julianzanetti/portfolio:cache-arm64
          cache-to: type=registry,ref=julianzanetti/portfolio:cache-arm64,mode=max

  create-manifest:
    runs-on: ubuntu-latest
    needs: [build-amd64, build-arm64]
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Create and push multi-arch manifest
        run: |
          docker manifest create julianzanetti/portfolio:latest \
            julianzanetti/portfolio:amd64 \
            julianzanetti/portfolio:arm64
          docker manifest push julianzanetti/portfolio:latest

