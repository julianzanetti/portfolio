---
import { getCollection, getEntry } from 'astro:content';
import type { APIContext } from 'astro';
import type { CollectionEntry } from 'astro:content';
import { AstroError } from 'astro/errors';

// ✨ ¡Acá definís los slugs que existen!
export async function getStaticPaths() {
  const allProjects = await getCollection('projects');

  return allProjects.map((project) => ({
    params: { slug: project.slug },
  }));
}

// Obtené el slug desde la URL
const { slug } = Astro.params;
const project: CollectionEntry<'projects'> | undefined = await getEntry('projects', slug);

if (!project) {
  throw new AstroError(`Proyecto no encontrado: ${slug}`);
}

const { data, body } = project;
---
<html lang="es">
  <head>
    <title>{data.title} | Julián Zanetti</title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  </head>

  <body class="bg-[#0d0a2d] text-white px-6 py-10 max-w-4xl mx-auto">
    <h1 class="text-3xl text-primary font-bold mb-4">{data.title}</h1>
    <p class="text-gray-300 mb-4">{data.description}</p>

    <div class="flex flex-wrap gap-2 mb-6">
      {data.technologies?.map((tech) => (
        <span class="bg-[#1e1b4b] text-primary px-3 py-1 rounded-full text-sm">{tech}</span>
      ))}
    </div>

    {data.cover && <img src={data.cover} alt={data.title} class="rounded-lg mb-6" />}

    <article class="prose prose-invert">
      {body}
    </article>

    {data.githubUrl && (
      <a
        href={data.githubUrl}
        target="_blank"
        class="inline-block mt-6 bg-primary text-white px-6 py-2 rounded-md font-semibold hover:bg-[#a29bfe] transition"
      >
        Ver en GitHub
      </a>
    )}
  </body>
</html>